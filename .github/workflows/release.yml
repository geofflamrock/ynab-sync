name: Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version number to use for the release
        required: true

jobs:
  build:
    name: "${{ matrix.os}}: Create cli executable"

    strategy:
      matrix:
        node-version: ["14"]
        os: ["Linux", "MacOS", "Windows"]
        include:
          - node-version: 14
            os: Linux
            platform: ubuntu-latest
            target: node14-linux-x64
            cli-artifact: cli-linux
            cli-exe: ynab-sync-cli-linux
          - node-version: 14
            os: MacOS
            platform: macos-latest
            target: node14-macos-x64
            cli-artifact: cli-macos
            cli-exe: ynab-sync-cli-macos
          - node-version: 14
            os: Windows
            platform: windows-latest
            target: node14-win-x64
            cli-artifact: cli-win
            cli-exe: ynab-sync-cli-win.exe

    runs-on: ${{ matrix.platform }}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache .pnpm-store
        uses: actions/cache@v1
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        run: curl -f https://get.pnpm.io/v6.js | node - add --global pnpm@6

      - name: Install Dependencies
        run: pnpm install

      - name: Create CLI Package
        run: "pnpm run pkg -- -- --target ${{ matrix.target }} --output ./bin/cli/${{ matrix.cli-exe }}"

      - name: Publish CLI Package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.cli-artifact }}
          path: packages/cli/bin/cli/${{ matrix.cli-exe }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Create content directory
        run: mkdir ./content

      - uses: actions/download-artifact@v2
        with:
          name: cli-linux
          path: ./content

      - uses: actions/download-artifact@v2
        with:
          name: cli-macos
          path: ./content

      - uses: actions/download-artifact@v2
        with:
          name: cli-win
          path: ./content

      - name: Create Release
        uses: ncipollo/release-action@v1.8.6
        with:
          commit: main
          tag: ${{ github.event.inputs.version }}
          artifacts: "content/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: github.ref != 'refs/heads/main'
          prerelease: github.ref != 'refs/heads/main'

      - name: Setup .NET Core SDK 5.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          source-url: https://nuget.pkg.github.com/geofflamrock/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Restore
        run: dotnet restore ./nuget

      - name: Pack
        run: dotnet pack ./nuget -p:PackageVersion=${{ github.event.inputs.version }} --no-build --no-restore --output ./dist --configuration Release

      - name: Push
        run: dotnet nuget push ./dist/*.nupkg --api-key ${{secrets.GITHUB_TOKEN}}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
